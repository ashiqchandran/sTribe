<%- include('../partials/user/header') %>
<link rel="stylesheet" href="/style/user/cart.css">

<div class="cart-container">
  <div class="cart-items">
    <% if (cartItems && cartItems.length > 0) { %>
      <% cartItems.forEach(item => { %>
        <div class="cart-item">
          <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="item-image">
          <div class="item-details">
            <h3 class="item-title">
              <%= item.product.productName %>
            </h3>
            <p class="item-price">₹<%= item.product.salePrice %></p>
            <span class="remove-item" data-id="<%= item.product._id %>">
              <i class="fas fa-trash"></i> Remove
            </span>
          </div>
          <div class="stock-controls">
            <button class="stock-btn decrement">-</button>
            <input type="number" class="stock-input" value="<%= item.quantity %>" min="1"
              data-max-stock="<%= item.product.quantity %>" data-product-id="<%= item.product._id %>">
            <button class="stock-btn increment">+</button>
          </div>
        </div>
      <% }) %>
    <% } else { %>
      <div class="empty-cart">
        <h3>Your cart is empty</h3>
        <p>Start adding items to your cart!</p>
        <a href="/shop" class="btn-gold mt-2">Continue Shopping</a>
      </div>
    <% } %>
  </div>

  <% if (cartItems && cartItems.length > 0) { %>
    <div class="order-summary">
      <h2 class="mb-3">Order Summary</h2>
      <div class="summary-item">
        <span>Subtotal:</span>
        <span id="subtotal">₹<%= subtotal %></span>
      </div>
      <div class="summary-item">
        <span>Shipping:</span>
        <span id="shipping">₹<%= shipping %></span>
      </div>
      <div class="summary-item total">
        <span>Total:</span>
        <span id="total">₹<%= grandTotal %></span>
      </div>

      <a href="/checkout"><button class="btn-gold checkout-button" style="width: 100%">Proceed to Checkout</button></a>
    </div>
  <% } %>
</div>

<script>

document.querySelector('.cart-items').addEventListener('click', function(event) {
  // Remove item from cart
  if (event.target && event.target.classList.contains('remove-item')) {
    const productId = event.target.dataset.id;
    Swal.fire({
      title: 'Remove Item?',
      text: 'Are you sure you want to remove this item from your cart?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#dc3545',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/removeCartItem', {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Removed!', 'Item has been removed.', 'success')
              .then(() => window.location.reload());
          } else {
            Swal.fire('Error!', data.message || 'Could not remove item.', 'error');
          }
        })
        .catch(err => {
          console.error('Remove error:', err);
          Swal.fire('Error!', 'Something went wrong.', 'error');
        });
      }
    });
  }

  // Handle increment and decrement of quantity
  if (event.target && event.target.classList.contains('stock-btn')) {
    const btn = event.target;
    const input = btn.closest('.stock-controls').querySelector('.stock-input');
    let currentValue = parseInt(input.value);
    const maxStock = parseInt(input.dataset.maxStock);
    const productId = input.dataset.productId;

    if (btn.classList.contains('increment')) {
      const maxAllowed = Math.min(maxStock, 5); // 5 is the maximum allowed per user
      if (currentValue < maxAllowed) {
        currentValue++;
      } else {
        Swal.fire({
          title: maxStock < 5 ? 'Stock Limit Reached!' : 'Maximum Quantity Reached!',
          text: maxStock < 5 ? `Only ${maxStock} items available.` : 'Only 5 items allowed per user.',
          icon: 'info'
        });
      }
    } else if (btn.classList.contains('decrement')) {
      if (currentValue > 1) {
        currentValue--;
      }
    }

    input.value = currentValue; // Update input value
    updateServerQuantity(productId, currentValue); // Update the server with new quantity
    updateTotals(); // Update total values
  }
});

</script>

<%- include('../partials/user/footer') %>
