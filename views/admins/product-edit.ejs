<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="/style/admin/product_edit.css">
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
</head>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <form id="editProductForm" method="POST" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data">
                <div class="mb-4">
                    <label for="product_name" class="form-label">Product Name</label>
                    <input type="text" name="productName" value="<%= product.productName %>" class="form-control" id="product_name" required>
                </div>

                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea name="description" class="form-control" rows="4" required><%= product.description %></textarea>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Regular Price</label>
                            <input name="regularPrice" type="number" value="<%= product.regularPrice %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Sale Price</label>
                            <input name="salePrice" type="number" value="<%= product.salePrice %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Quantity</label>
                            <input name="quantity" type="number" value="<%= product.quantity %>" class="form-control" required>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Category</label>
                    <select class="form-select" name="category" required>
                        <% cat.forEach(category => { %>
                            <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : '' %> >
                                <%= category.name %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">color</label>
                        <input name="color" type="string" value="<%= product.color %>" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">brand</label>
                        <input name="brand" type="string" value="<%= product.brand %>" class="form-control" required>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">size</label>
                        <input name="size" type="string" value="<%= product.size %>" class="form-control" required>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Product Images</label>
                    <div class="row">
                        <% for(let i = 0; i < 4; i++) { %>
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <% if (product.productImage[i]) { %>
                                        <img src="<%= product.productImage[i] %>" class="card-img-top" alt="Product Image">
                                        <div class="card-body text-center">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>', '<%= i %>')">Delete Image</button>
                                        </div>
                                    <% } else { %>
                                        <div class="card-body">
                                            <input type="file" name="image<%= i+1 %>" accept="image/*" class="form-control" onchange="previewImage(event, '<%= i %>')">
                                            <img id="preview<%= i %>" src="#" alt="Image preview" style="display: none; max-width: 100%; height: auto; margin-top: 10px;">
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>

                <div class="mb-4">
                    <button class="btn btn-primary" type="submit">Update Product</button>
                </div>
            </form>
        </div>
    </div>
</section>

<script>
    let croppers = {}; // Store multiple cropper instances
    let croppedImagesArray = {}; // Store cropped images with index
    let existingImagesCount = '<%= product.productImage.length %>'; // Existing images count

    function previewImage(event, index) {
        const input = event.target;
        if (input.files && input.files[0]) {
            const reader = new FileReader();
    
            reader.onload = function (e) {
                // Select preview image element
                const preview = document.getElementById(`preview${index}`);
                preview.src = e.target.result;
                preview.style.display = "block"; // Show the preview
    
                // Destroy existing cropper if it exists
                if (croppers[index]) {
                    croppers[index].destroy();
                }
    
                // Wait until the image loads before initializing Cropper.js
                preview.onload = function () {
                    croppers[index] = new Cropper(preview, {
                        aspectRatio: 1, // Square crop
                        viewMode: 2, // Ensures it fits in container
                        autoCrop: true,
                        zoomable: true,
                        scalable: true,
                    });
                };
            };
    
            reader.readAsDataURL(input.files[0]); // Convert file to a Base64 URL
        }
    }
    
    function saveCroppedImage(index) {
        if (!croppers[index]) {
            alert("Please select and crop an image first.");
            return;
        }
    
        croppers[index].getCroppedCanvas().toBlob((blob) => {
            croppedImagesArray[index] = blob; // Save cropped image at the correct index
            const preview = document.getElementById(`preview${index}`);
            preview.src = URL.createObjectURL(blob); // Update preview with cropped image
        }, "image/jpeg");
    }
    
    function deleteSingleImage(imageName, productId, index) {
        if (confirm('Are you sure you want to delete this image?')) {
            fetch('/admin/deleteImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    imageNameToServer: imageName,
                    productIdToServer: productId,
                    imageIndex: index
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                    location.reload();
                } else {
                    alert('Failed to delete image');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the image');
            });
        }
    }
    
    const editProductForm = document.getElementById('editProductForm');
    
    editProductForm.addEventListener('submit', function(event) {
        let totalImageCount = existingImagesCount; // Existing images
        
        // Count new image uploads (files that have been selected)
        const newImageInputs = document.querySelectorAll('input[type="file"]');
        newImageInputs.forEach(input => {
            if (input.files && input.files.length > 0) {
                totalImageCount++;
            }
        });
        
        // Only show alert if the total count of images is less than 4
        if (totalImageCount < 4) {
            event.preventDefault(); // Stop form submission
            alert(`Product must have at least 4 images. Currently has ${totalImageCount} images. Please add ${4 - totalImageCount} more images.`);
            return false;
        }
        
        // Form will submit if validation passes
        return true;
    });
</script>
