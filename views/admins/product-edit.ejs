
<head>
    <link rel="stylesheet" href="/style/admin/product_edit.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<style>
        :root {
      --primary: #4361ee;
      --secondary: #3a0ca3;
      --light: #f8f9fa;
      --dark: #212529;
      --gray: #6c757d;
      --primary-bg-color: #f4f4f4;
      --primary-text-color: #333;
    }

    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--primary-bg-color);
      color: var(--primary-text-color);
    }

    .admin-container {
      display: flex;
      min-height: 100vh;
      flex-direction: row;
    }

    
    .sidebar {
      width: 18vw;
      background-color: #333;
      color: #fff;
      padding: 2vh;
    }
    .sidebar-header h3 {
      font-size: 1.5vw;
      margin: 0;
    }



    .sidebar-menu {
      list-style: none;
      padding: 0;
      margin-top: 2vh;
    }

    .sidebar-menu li {
      margin: 2vh 0;
    }

    .sidebar-menu li a {
      color: #fff;
      text-decoration: none;
      display: block;
      padding: 1vh;
      transition: background-color 0.3s;padding: 0.8rem;
    }

    .sidebar-menu li a:hover,
    .sidebar-menu li a.active {
      background-color: #555;
    }


    .menu-toggle {
        display: none;
        background: none;
        border: none;
        color: white;
        font-size: 2rem;
        cursor: pointer;
    }

    /* Main Content */
    .main-content {
        flex: 1;
        padding: 2vh;
    }

    .admin-info-box {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fff;
        padding: 2vh;
        margin-bottom: 2vh;
        border-radius: 1vw;
        box-shadow: 0 0.4vh 0.6vh rgba(0, 0, 0, 0.1);
    }

    .logout-btn {
        background-color: var(--danger);
        color: white;
        border: none;
        padding: 1vh 2vw;
        border-radius: 4px;
        cursor: pointer;
    }

    .table-responsive {
        overflow-x: auto;
        margin-top: 2vh;
        background: white;
        border-radius: 1vw;
        box-shadow: 0 0.4vh 0.6vh rgba(0,0,0,0.1);
    }

    .table {
        width: 100%;
        min-width: 1000px;
        border-collapse: collapse;
    }

    .table th,
    .table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid #dee2e6;
    }

    .table th {
        background-color: var(--primary);
        color: white;
    }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
        margin: 2px;
    }

    .btn {
        padding: 0.6rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9rem;
    }

    .btn-primary { background-color: var(--primary); color: white; }
    .btn-danger { background-color: var(--danger); color: white; }
    .btn-success { background-color: var(--success); color: white; }
    .btn-warning { background-color: #ffc107; color: black; }

    .pagination {
        margin-top: 2rem;
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

    .page-link {
        padding: 0.5rem 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        text-decoration: none;
        color: var(--primary);
    }

    .page-item.active .page-link {
        background-color: var(--primary);
        color: white;
        border-color: var(--primary);
    }

    /* Responsive Styles */
    @media (max-width: 1200px) {
        .admin-container {
            flex-direction: column;
        }

        .sidebar {
            width: 100%;
        }

        .sidebar-menu {
            display: none;
            flex-direction: column;
        }

        .sidebar-menu.show {
            display: flex;
        }

        .menu-toggle {
            display: block;
        }

        .main-content {
            padding: 1rem;
        }

        .container {
            padding: 1rem;
        }
    }

    @media (max-width: 768px) {
        .table th,
        .table td {
            padding: 0.8rem;
            font-size: 0.9rem;
        }

        .table td:nth-child(3),
        .table th:nth-child(3),
        .table td:nth-child(5),
        .table th:nth-child(5) {
            display: none;
        }

        .product-image {
            width: 40px;
            height: 40px;
        }
    }

    @media (max-width: 576px) {
        .admin-info-box {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }

        .table td:nth-child(6),
        .table th:nth-child(6) {
            display: none;
        }

        .btn {
            padding: 0.5rem 1rem;
            font-size: 0.85rem;
        }
    }
</style>

</head>
<div class="admin-container">
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <h3>Admin Panel</h3>
     
      </div>
      <ul class="sidebar-menu" id="sidebarMenu" style="  width:15vw;">
        <li><a href="/admin/dashboard"><i class="fas fa-tachometer-alt"></i> <span>Dashboard</span></a></li>
                <li><a href="/admin/users"><i class="fas fa-users"></i> <span>Customers</span></a></li>
                <li><a href="/admin/category"><i class="fas fa-list"></i> <span>Categories</span></a></li>
                <li><a href="/admin/orders"><i class="fas fa-shopping-bag"></i> <span>Orders</span></a></li>
                <li><a href="/admin/products"><i class="fas fa-plus-circle"></i> <span>Add Products</span></a></li>
                <li><a href="/admin/allProducts"><i class="fas fa-box"></i> <span>Products</span></a></li>
                <li><a href="/admin/coupon"><i class="fas fa-tags"></i> <span>Coupons</span></a></li>
                <li><a href="/admin/transaction"><i class="fas fa-money-bill-wave"></i> <span>Transactions</span></a></li>
                <li><a href="/admin/complaints"><i class="fas fa-exclamation-circle"></i> <span>Complaints</span></a></li>
                <li><a href="/admin/report"><i class="fas fa-chart-bar"></i> <span>Report</span></a></li>
      </ul>
    </div>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <form id="editProductForm" method="POST" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data">
                <div class="mb-4">
                    <label for="product_name" class="form-label">Product Name</label>
                    <input type="text" name="productName" value="<%= product.productName %>" class="form-control" id="product_name" required>
                </div>

                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea name="description" class="form-control" rows="4" required><%= product.description %></textarea>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Regular Price</label>
                            <input name="regularPrice" type="number" step="1" value="<%= product.regularPrice %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Sale Price</label>
                            <input name="salePrice" type="number" step="1" value="<%= Math.floor(product.salePrice) %>" class="form-control" max="<%= product.regularPrice %>" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Quantity</label>
                            <input name="quantity" type="number" value="<%= product.quantity %>" class="form-control" min="0" required>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Category</label>
                    <select class="form-select" name="category" required>
                        <% cat.forEach(category => { %>
                            <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : '' %>>
                                <%= category.name %>
                            </option>
                        <% }) %>
                    </select>
                </div>

                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">Color</label>
                        <input name="color" type="string" value="<%= product.color %>" class="form-control" required>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">Brand</label>
                        <input name="brand" type="string" value="<%= product.brand %>" class="form-control" required>
                    </div>
                </div>

                <div class="col-lg-3">
                    <div class="mb-4">
                        <label class="form-label">Size</label>
                        <input name="size" type="string" value="<%= product.size %>" class="form-control" required>
                    </div>
                </div>

                <!-- Image Upload & Cropping Section -->
              
                <div class="mb-4">
                    <label class="form-label">Product Images (Must upload 4 images)</label>
                    <div class="row">
                        <% for(let i = 0; i < 4; i++) { %>
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <% if (product.productImage[i]) { %>
                                        <img src="<%= product.productImage[i] %>" class="card-img-top" alt="Product Image">
                                        <div class="card-body text-center">
                                            <button type="button" class="btn btn-danger btn-sm" style="color: red;" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>', '<%= i %>')" >Delete Image</button>
                                        </div>
                                    <% } else { %>
                                        <div class="card-body">
                                            <input type="file" name="image<%= i+1 %>" accept="image/*" class="form-control" onchange="initImageCrop(event, '<%= i %>')">
                                            
                                            <!-- Cropper Container -->
                                            <div id="cropper-wrapper-<%= i %>" class="cropper-wrapper">
                                                <div class="img-container">
                                                    <img id="preview-<%= i %>" class="preview-image">
                                                </div>
                                                <p class="crop-instructions">Drag the corners to adjust crop area</p>
                                                <div class="cropper-controls">
                                                    <button type="button" class="crop-btn" onclick="applyCrop('<%= i %>')">Crop & Save</button>
                                                    <button type="button" class="reset-btn" onclick="resetCrop('<%= i %>')">Reset</button>
                                                </div>
                                            </div>
                                            
                                            <!-- Hidden input for cropped image -->
                                            <input type="hidden" id="cropped-image-<%= i %>" name="croppedImage<%= i+1 %>">
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>

                <div class="mb-4">
                    <button class="btn btn-primary" type="submit">Update Product</button>
                </div>
            </form>
        </div>
    </div>
</section>
</div>
<script>
    let croppers = {};
    let originalImages = {};

    // Initialize image cropping
    function initImageCrop(event, index) {
        const file = event.target.files[0];
        if (!file) return;

        const reader = new FileReader();
        const preview = document.getElementById(`preview-${index}`);
        const wrapper = document.getElementById(`cropper-wrapper-${index}`);

        reader.onload = function(e) {
            // Store original image data
            originalImages[index] = e.target.result;
            
            // Show preview and wrapper
            preview.src = e.target.result;
            preview.style.display = 'block';
            wrapper.style.display = 'block';

            // Destroy previous cropper if exists
            if (croppers[index]) {
                croppers[index].destroy();
            }

            // Initialize cropper with options
            croppers[index] = new Cropper(preview, {
                aspectRatio: 1, // Square ratio (change as needed)
                viewMode: 1,    // Restrict crop box to image boundaries
                autoCrop: true,
                movable: true,
                zoomable: true,
                rotatable: false,
                scalable: true,
                cropBoxMovable: true,
                cropBoxResizable: true,
                minCanvasWidth: 200,
                minCanvasHeight: 200,
                background: false,
                ready: function() {
                    // Set initial crop box size (75% of image)
                    const containerData = this.cropper.getContainerData();
                    const initialSize = Math.min(containerData.width, containerData.height) * 0.75;
                    this.cropper.setCropBoxData({
                        width: initialSize,
                        height: initialSize
                    });
                }
            });
        };
        reader.readAsDataURL(file);
    }

    // Apply the crop and save
    function applyCrop(index) {
        if (!croppers[index]) {
            alert("Please select an image first.");
            return;
        }

        const canvas = croppers[index].getCroppedCanvas({
            width: 800,      // Output width
            height: 800,     // Output height
            minWidth: 256,
            minHeight: 256,
            maxWidth: 2000,
            maxHeight: 2000,
            fillColor: '#fff',
            imageSmoothingEnabled: true,
            imageSmoothingQuality: 'high',
        });

        if (!canvas) {
            alert("Please adjust the crop frame before saving.");
            return;
        }

        // Convert canvas to blob and update form
        canvas.toBlob((blob) => {
            const fileInput = document.querySelector(`input[name="image${index+1}"]`);
            const file = new File([blob], `cropped-image-${index}.jpg`, { type: 'image/jpeg' });
            
            // Create a new DataTransfer and add the file
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            fileInput.files = dataTransfer.files;
            
            // Hide the cropper controls
            document.getElementById(`cropper-wrapper-${index}`).style.display = 'none';
            
            // Show success message
            alert("Image cropped and saved successfully!");
        }, 'image/jpeg', 0.9); // 90% quality
    }

    // Reset the cropping interface
    function resetCrop(index) {
        if (croppers[index]) {
            croppers[index].destroy();
            croppers[index] = null;
        }
        
        const wrapper = document.getElementById(`cropper-wrapper-${index}`);
        const preview = document.getElementById(`preview-${index}`);
        const fileInput = document.querySelector(`input[name="image${index+1}"]`);
        
        wrapper.style.display = 'none';
        preview.style.display = 'none';
        preview.src = '';
        fileInput.value = '';
    }

    // Delete existing image
    function deleteSingleImage(imageName, productId, index) {
        if (confirm('Are you sure you want to delete this image?')) {
            fetch('/admin/deleteImage', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    imageNameToServer: imageName,
                    productIdToServer: productId,
                    imageIndex: index
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                    location.reload();
                } else {
                    alert('Failed to delete image');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the image');
            });
        }
    }

    // Form validation
    document.getElementById('editProductForm').addEventListener('submit', function(event) {
        let totalImages = '<%= product.productImage.length %>';
        const fileInputs = document.querySelectorAll('input[type="file"]');
        
        fileInputs.forEach(input => {
            if (input.files && input.files.length > 0) {
                totalImages++;
            }
        });

        if (totalImages < 4) {
            event.preventDefault();
            alert(`You need ${4 - totalImages} more images to proceed.`);
        }
    });
</script>